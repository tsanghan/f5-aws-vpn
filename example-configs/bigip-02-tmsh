

# Change Passwords
modify auth password root <it will prompt you> 
modify auth user admin password <your password>
# ex. modify auth user admin 'MyPa$$Word'

# License Devices
modify sys global-settings hostname "bigip-vpn-02.mgmt.example.com"
modify sys dns name-servers add { 10.11.26.1 }
modify sys ntp servers add { "0.pool.ntp.org" }
# Licensing cmd will reload config so save changes before
save /sys config 
install sys license registration-key "XXXXXXXXXXXXXXXX"

# Configure Global Settings
modify sys global-settings gui-setup disabled
modify sys db dhclient.mgmt { value "disable" }

# Configure Network:

# Configure Vlans
create net vlan internal interfaces add { 1.1 }
create net vlan external interfaces add { 1.2 }

# Configure Device Unique Self-IPs
create net self 208.85.211.58 address 208.85.211.58/28 traffic-group traffic-group-local-only vlan external
create net self 10.12.0.58 address 10.12.0.58/16 allow-service default traffic-group traffic-group-local-only vlan external
create net self 10.3.0.3 address 10.3.0.3/16 allow-service default traffic-group traffic-group-local-only vlan internal

# Configure Floating Self-IPs
create net self 10.12.0.56 address 10.12.0.56/16 traffic-group traffic-group-1 vlan external
create net self 10.3.0.1 address 10.3.0.1/16 allow-service default traffic-group traffic-group-1 vlan internal

# Create Default Route
create net route default gw 10.12.255.254

# Cluster Devices
delete cm trust-domain all
mv cm device bigip1 bigip-vpn-02.mgmt.example.com
modify cm device bigip-vpn-02.mgmt.example.com configsync-ip 10.12.0.58 unicast-address { { effective-ip 10.12.0.58 effective-port 1026 ip 10.12.0.58 } } mirror-ip 10.12.0.58 mirror-secondary-ip 10.12.0.58

# Go to Peer to Finish Clustering. Once Clustering is complete, proceed.


# Configure Tunnel Keep Alive Pools
create ltm pool aws_conn_2_keep_alive_pool members add { 169.254.12.161:179 { address 169.254.12.161 } 169.254.12.77:179 { address 169.254.12.77 } } monitor tcp_half_open and gateway_icmp 

# Configure IPSEC Global Settings
modify sys db config.allow.rfc3927 { value "enable" } 
modify sys db ipsec.if.checkpolicy { value "disable" }
# Optional 
modify sys db connection.vlankeyed { value "disable" } 

# Configure IKE Peers
create net ipsec ike-peer aws_vpn_conn_2_peer_1 lifetime 480 nat-traversal on my-id-type address peers-id-type address phase1-auth-method pre-shared-key phase1-encrypt-algorithm aes128 remote-address 52.25.240.97 verify-cert true version add { v1 } preshared-key <key>
create net ipsec ike-peer aws_vpn_conn_2_peer_2 lifetime 480 nat-traversal on my-id-type address peers-id-type address phase1-auth-method pre-shared-key phase1-encrypt-algorithm aes128 remote-address 54.200.79.6 verify-cert true version add { v1 } preshared-key <key>

# Configure IPSEC Policy
create net ipsec ipsec-policy AWS_IPSEC_Interface_Policy ike-phase2-auth-algorithm sha1 ike-phase2-encrypt-algorithm aes128 ike-phase2-lifetime 60 ike-phase2-perfect-forward-secrecy modp1024 mode interface

# Configure IPSEC Selectors
create net ipsec traffic-selector aws_conn_2_tun_1_selector { destination-address 169.254.12.160/30 ipsec-policy AWS_IPSEC_Interface_Policy source-address 169.254.12.160/30 }
create net ipsec traffic-selector aws_conn_2_tun_2_selector { destination-address 169.254.12.76/30 ipsec-policy AWS_IPSEC_Interface_Policy source-address 169.254.12.76/30 }

# Configure IPSEC Profiles
create net tunnels ipsec aws_conn_2_tun_1_profile app-service none defaults-from ipsec traffic-selector aws_conn_2_tun_1_selector 
create net tunnels ipsec aws_conn_2_tun_2_profile app-service none defaults-from ipsec traffic-selector aws_conn_2_tun_2_selector 

# Configure Tunnels
create net tunnels tunnel aws_conn_2_tun_1 local-address 208.85.211.58 mtu 1436 profile aws_conn_2_tun_1_profile remote-address 52.25.240.97
create net tunnels tunnel aws_conn_2_tun_2 local-address 208.85.211.58 mtu 1436 profile aws_conn_2_tun_2_profile remote-address 54.200.79.6

# Configure Tunnel Self-IPs
create net self 169.254.12.78 address 169.254.12.78/30 allow-service all traffic-group /Common/traffic-group-local-only vlan aws_conn_2_tun_2
create net self 169.254.12.162 address 169.254.12.162/30 allow-service all traffic-group /Common/traffic-group-local-only vlan aws_conn_2_tun_1 


###############################################################

# Configure BGP

Create a file named ZebOS.conf that looks like example_configs/cache/bigip-02_ZebOS.conf:

!
no service password-encryption
!
log file /var/log/zebos
!
!debug bgp
!debug bgp nsm
!debug bgp nht
!debug bgp events
!debug bgp keepalives
!debug bgp updates
!debug bgp fsm
!debug bgp filters
!debug bgp dampening
!debug bgp bfd
!
router bgp 65000
 bgp router-id 169.254.12.162
 max-paths ebgp 8
 bgp log-neighbor-changes
 bgp graceful-restart restart-time 120
 network 10.3.0.0/16
 neighbor 169.254.12.161 remote-as 7224
 neighbor 169.254.12.161 default-originate
 neighbor 169.254.12.161 soft-reconfiguration inbound
 neighbor 169.254.12.161 capability graceful-restart
 ! neighbor 169.254.12.161 route-map prepend-tunnel-1 out
 neighbor 169.254.12.77 remote-as 7224
 neighbor 169.254.12.77 default-originate
 neighbor 169.254.12.77 soft-reconfiguration inbound
 neighbor 169.254.12.77 capability graceful-restart
 ! neighbor 169.254.12.77 route-map prepend-tunnel-2 out
 !
route-map prepend-tunnel-1 permit 10
 set as-path prepend 65000 65000 65000
!
route-map prepend-tunnel-2 permit 10
 set as-path prepend 65000 65000 65000 65000
!
line con 0
 login
line vty 0 39
 login
!
end

#Copy it to /config/zebos/rd0/ZebOS.conf

###############################################################

# Enable BGP
modify net route-domain 0 routing-protocol add { BGP }


#### Optional but Recommended:

# Configure HA Group
create sys ha-group vpn_conn_2_up pools add { aws_conn_2_keep_alive_pool { threshold 1 weight 10 } } 
# Configure to work on traffic-group-1
cm traffic-group /Common/traffic-group-1 { ha-group vpn_conn_2_up }